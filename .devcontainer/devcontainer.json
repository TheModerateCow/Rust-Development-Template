{
  "name": "Rust Development Container",
  "image": "ubuntu:24.04",

  // Features to add to the dev container. More info: https://containers.dev/features
  "features": {
    "ghcr.io/devcontainers/features/common-utils:2": {
      "installZsh": true,
      "configureZshAsDefaultShell": true,
      "installOhMyZsh": true,
      "installOhMyZshConfig": true,
      "upgradePackages": true
    },
    "ghcr.io/devcontainers/features/git:1": {
      "ppa": true,
      "version": "latest"
    }
  },

  // Configure tool-specific properties
  "customizations": {
    // Configure properties specific to VS Code
    "vscode": {
      // Add the IDs of extensions you want installed when the container is created
      "extensions": [
        "rust-lang.rust-analyzer",
        "tamasfe.even-better-toml",
        "fill-labs.dependi",
        "vadimcn.vscode-lldb",
        "ms-vscode.cmake-tools",
        "ms-vscode.cpptools",
        "rooveterinaryinc.roo-cline",
        "mhutchie.git-graph"
      ],
      // Set *default* container specific settings.json values on container create
      "settings": {
        "rust-analyzer.restartServerOnConfigChange": true,
        "rust-analyzer.runnables.extraEnv": {"PATH": "${env:HOME}/.cargo/bin:${env:PATH}"},
        "rust-analyzer.checkOnSave.command": "clippy",
        "editor.defaultFormatter": "rust-lang.rust-analyzer",
        "rust-analyzer.checkOnSave": true,
        "rust-analyzer.cargo.allFeatures": true,
        "rust-analyzer.procMacro.enable": true,
        "rust-analyzer.cargo.loadOutDirsFromCheck": true,
        "rust-analyzer.completion.addCallArgumentSnippets": true,
        "rust-analyzer.completion.addCallParenthesis": true,
        "rust-analyzer.inlayHints.enable": true,
        "rust-analyzer.inlayHints.chainingHints": true,
        "rust-analyzer.inlayHints.parameterHints": true,
        "rust-analyzer.inlayHints.typeHints": true,
        "editor.formatOnSave": true,
        "editor.formatOnType": true,
        "files.watcherExclude": {
          "**/target/**": true
        }
      }
    }
  },

  // Use 'forwardPorts' to make a list of ports inside the container available locally
  // "forwardPorts": [8080],

  // Use 'postCreateCommand' to run commands after the container is created
  "postCreateCommand": ".devcontainer/postCreate.sh",

  // Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root
  "remoteUser": "root",

  // Configure the container's environment
  "containerEnv": {
    "RUST_BACKTRACE": "1"
  },

  // Mounts
  "mounts": [
    // Mount the cargo registry to speed up builds
    "source=rust-cargo-registry,target=/usr/local/cargo/registry,type=volume"
  ]

// "networks": [""]
}
